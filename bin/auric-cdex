#!/usr/bin/perl

use strict;
use warnings;

use IPC::Open3;
use IO::Handle;
use Getopt::Long
    qw(:config posix_default gnu_compat require_order bundling no_ignore_case);

my $flog;
GetOptions(
    'l|log=s' => \$flog,
) or exit usage();

my $jobdir = $ENV{AURIC_JOBDIR} || die;
chdir $jobdir or die;

my ($pid, $fh);
if (@ARGV) {
    # open $fh, '-|', @ARGV or die "Can't exec: $!";
    $pid = open3(undef, $fh, $fh, @ARGV);
}
else {
    $fh = \*STDIN;
}
$fh->autoflush(1);

my $fhlog;
if ($flog) {
    open my $fhlog, '>', $flog or die "Can't open file $flog for writing: $!";
}

my $discid = '-';
my @title;
my ($num_tracks, $started);

while (<$fh>) {
    print $fhlog $_ if $fhlog;
    print "disc prep\n" if !$started;
    $started = 1;
    if (/AUDIOtrack/) {
        my $info = <$fh>;
        $num_tracks = $1 if $info =~ /^\s*1-\s*(\d+)/;
    }
    if (/^CDDB discid: 0x([0-9a-f]{8})/) {
        $discid = $1;
    }
    elsif (/^Album title: +'(.+)'(.*)/) {
        $title[0] = $1 . $2;
        $title[0] =~ s/\t.*//;
    }
    elsif (/^Track +(\d+): '(.+)'/ && $1 > 0) {
        $title[$1] = $2;
        $num_tracks = $1 if $1 > $num_tracks;
    }
    elsif (/^percent_done:/) {
        @title = ('[Untitled disc]') if !@title;
        print STDERR "\e[35;1m$discid \e[36;1m$title[0]\e[0m\n";
        print "disc begin $discid $num_tracks $title[0]\n";
        my $n = 1;
        my $t = $title[$n] ||= '[Untitled track]';
        printf STDERR "       %3d. %s", $n, $t;
        print "track $n begin $t\n";
        local $/ = "\r";
        while (<$fh>) {
            if (/100%/) {
                my $result;
                if (/track +(\d+) .*recorded (.+)/) {
                    my (undef, $adv) = ($1, $2);
                    my $color = 32;
                    if ($adv eq 'successfully') {
                        $result = ' ok ';
                    }
                    elsif ($adv =~ /with minor problems/) {
                        $result = ' ok ';
                    }
                    else {
                        $result = 'warn';
                        $color = 33;
                    }
                    printf STDERR "\r  \e[${color};1m%-4.4s\e[0m %3d. %s \n", $result, $n, $t;
                    my $ignore1 = <$fh>;
                    my $ignore2 = <$fh>;
                    $result =~ s/^ +| +$//g;
                }
                print "track $n done $result\n";
                $t = $title[++$n] ||= '[Untitled track]';
                print "track $n begin $t\n" if $n <= $num_tracks;
            }
            elsif (/(\d+)%/) {
                print "track $n progress $1\n";
                printf STDERR "\r  %3d%% %3d. %s ", $1, $n, $t;
            }
        }
    }
}
print "disc end\n";
# print $discid, "\n";

exit 0;

if (defined $pid) {
    (kill 0, $pid) == 1 or exit 0;
    waitpid($pid, 0);
    exit $? >> 8;
}

