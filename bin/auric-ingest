#!/usr/bin/perl 

use strict;
use warnings;

use File::Glob;
use MP3::Tag;
use Getopt::Long
    qw(:config posix_default gnu_compat require_order bundling no_ignore_case);

my $root = $ENV{MUSIC} ||= "$ENV{HOME}/music";
my ($dry_run, $force);

my %order = (
    'track' => 1,
    'title' => 2,
    'artist' => 3,
);

GetOptions(
    'n|dry-run' => \$dry_run,
    'f|force'   => \$force,
) or exit usage();

chdir $root or die "Can't change to root directory $root: $!";
my @discs = map { s{^($root/)?disc-}{}o; $_ } @ARGV ? @ARGV : glob('disc-*');

foreach my $id (@discs) {
    chdir "$root/disc-$id" or die "Can't chdir to disc-$id: $!";
    my $metadata = 'metadata';
    next if !$force && -e $metadata;
    $dry_run or mkdir 'cdda2wav' or die "Can't mkdir cdda2wav: $!";
    my @inf_files = glob("audio_*.inf");
    next if !@inf_files;
    my %disc = ( 'id' => '.' );
    my @tracks;
    my $fh;
    foreach my $inf (@inf_files) {
        $inf =~ /^audio_(\d\d)\.inf$/ or die "Unrecognized file: $inf";
        my $wav = "audio_$1.wav";
        my $mp3 = "audio_$1.mp3";
        my $id = sprintf('%04d', $1);
        my $tags = MP3::Tag->new($mp3);
        my ($title, $tracknum, $artist, $album, $comment, $year, $genre) = $tags->autoinfo;
        $disc{'album'}{$album}   = 1;
        $disc{'year'}{$year}     = 1;
        $disc{'genre'}{$genre}   = 1;
        $disc{'artist'}{$artist} = 1;
        push @tracks, {
            'id'     => $id,
            'title'  => $title,
            'track'  => $tracknum,
            'artist' => $artist,
            #'album'  => $album,
            #'year'   => $year,
            #'genre'  => $genre,
        };
        if (!$dry_run) {
            mkdir $id or die "Can't mkdir track $id: $!";
            rename $inf, "cdda2wav/$inf" or die "Can't move $inf: $!";
            if (-e $wav) {
                rename $wav, "$id/master.wav" or die "Can't move $wav: $!";
                symlink "../$id/master.wav", "cdda2wav/$wav" or die "Can't symlink $id/master.wav: $!";
            }
            if (-e $mp3) {
                rename $mp3, "$id/listen.mp3" or die "Can't move $mp3 $!";
                symlink "../$id/listen.mp3", "cdda2wav/$mp3" or die "Can't symlink $id/listen.mp3: $!";
            }
        }
    }
    if (!$dry_run) {
        open $fh, '>', $metadata or die;
        select $fh;
        foreach (grep { -e $_ } qw(audio.cddb audio.cdindex)) {
            rename $_, "cdda2wav/$_" or die "Can't move $_ to cdda2wav: $!";
        }
    }
    foreach my $obj (\%disc, @tracks) {
        my $oid = delete $obj->{'id'};
        my @keys = sort { ($order{$a} ||= 99) <=> ($order{$b} ||= 99) || $a cmp $b } keys %$obj;
        foreach my $key (@keys) {
            my $val = $obj->{$key};
            if (ref $val) {
                print "$oid $key $_\n" for sort keys %$val;
            }
            else {
                print "$oid $key $val\n";
            }
        }
        print "\n";
    }
}

