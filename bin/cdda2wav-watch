#!/usr/bin/perl

use strict;
use warnings;

my $discid;
my @title;

while (<STDIN>) {
    if (/^CDDB discid: 0x([0-9a-f]{8})/) {
        $discid = $1;
        # print STDERR "Disc ID:     $discid\n";
    }
    elsif (/^Album title: +'(.+)'(.*)/) {
        my $title = $1 . $2;
        $title =~ s/\t.*//;
        print STDERR "\e[35;1m$discid \e[36;1m$title\e[0m\n";
        $title[0] = $title;
    }
    elsif (/^Track +(\d+): '(.+)'/ && $1 > 0) {
        $title[$1] = $2;
    }
    elsif (/^percent_done:/) {
        if (@title == 0) {
            my $title = $title[0] = '[Untitled disc]';
            print STDERR "\e[35;1m$discid \e[36;1m$title\e[0m\n";
        }
        local $/ = '%';
        my $n = 1;
        my $t = $title[$n] ||= '[Untitled track]';
        printf STDERR "       %3d. %s", $n, $t;
        while (<STDIN>) {
            if (/100%$/) {
                local $/ = "\n";
                my $result = <STDIN>;
                if ($result =~ /track +(\d+) .*recorded (.+)/) {
                    my (undef, $adv) = ($1, $2);
                    my $color = 32;
                    if ($adv eq 'successfully') {
                        $result = ' ok ';
                    }
                    elsif ($adv =~ /with minor problems/) {
                        $result = ' ok ';
                    }
                    else {
                        $result = 'warn';
                        $color = 33;
                    }
                    printf STDERR "\r  \e[${color};1m%-4.4s\e[0m %3d. %s \n", $result, $n, $t;
                    my $ignore1 = <STDIN>;
                    my $ignore2 = <STDIN>;
                }
                $t = $title[++$n] ||= '[no title]';
                # last;
            }
            elsif (/(\d+)%/) {
                printf STDERR "\r  %3d%% %3d. %s ", $1, $n, $t;
            }
        }
    }
}
print $discid, "\n";
